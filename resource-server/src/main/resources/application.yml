# 기본 설정
spring:
  profiles:
    default: local # (프로파일 기본값 로컬로 지정)

  application.name:
    resource-server

  # .env import
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        ddl-auto: none
        id:
          new_generator_mappings: true
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  sql:
    init:
      mode: never # 서버 실행 시 data.sql 파일 항상 실행

# 서버 포트 설정
server:
  port: ${SERVER_PORT}

---

spring:
  config:
    activate:
      on-profile: local

# gRPC 서버 포트 설정
grpc:
  server:
    port: ${GRPC_RESOURCE_SERVER_PORT}
  client:
    auth:
      address: ${GRPC_HOST}:${GRPC_AUTH_SERVER_PORT}
      negotiation-type: plaintext

# 3. 테스트 실행 전용 프로파일
---
spring:
  config:
    activate:
      on-profile: test # 프로파일명 (@ActiveProfiles("test") 어노테이션을 부착한 테스트 클래스만 테스트 환경으로 실행)

  datasource:
    url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}_test
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create # 테스트 실행 시 DB의 모든 테이블 삭제 후 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        show-sql: true

